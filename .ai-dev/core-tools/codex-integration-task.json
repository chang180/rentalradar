{
  "title": "🔄 整合 Codex 智慧聚合演算法到 PHP 版本",
  "description": "## 🎉 恭喜！Codex 已完成 Python 版本\n\n你已經成功擴展了 `anomaly_detection.py`，加入了智慧標記聚合功能！\n\n## 📋 新的整合任務\n\n### 1. 分析 Python 演算法\n- 研究 `smart_marker_clusters()` 函數邏輯\n- 理解自適應半徑和網格感知查詢\n- 分析價值驅動的 Z-score 檢測\n- 學習噪聲處理機制\n\n### 2. 移植到 PHP 版本\n- 將演算法邏輯移植到 `AIMapOptimizationService.php`\n- 實作 `smart_marker_clusters()` 的 PHP 版本\n- 保持相同的演算法邏輯和參數\n- 確保 Hostinger 相容性\n\n### 3. 整合測試\n- 使用相同的 demo 資料測試\n- 比較 Python 和 PHP 版本結果\n- 確保演算法一致性\n- 效能基準測試\n\n## 🎯 重點任務\n\n### **分析 Python 演算法：**\n```python\n# 關鍵函數：smart_marker_clusters()\n# 參數：base_radius_km, zoom_level, min_cluster_size\n# 功能：自適應半徑、網格查詢、Z-score 檢測\n```\n\n### **移植到 PHP：**\n```php\n// 在 AIMapOptimizationService.php 中實作\npublic function smartMarkerClusters(\n    array $points,\n    float $baseRadiusKm = 0.6,\n    ?int $zoomLevel = null,\n    int $minClusterSize = 3\n): array\n```\n\n### **測試驗證：**\n```bash\n# Python 版本測試\npython3 .ai-dev/core-tools/anomaly_detection.py --task cluster --demo\n\n# PHP 版本測試\nphp test-php-ai-integration.php\n```\n\n## 📁 相關檔案\n- `anomaly_detection.py` (你的 Python 版本) ✅\n- `AIMapOptimizationService.php` (需要整合) 🔄\n- `test-php-ai-integration.php` (測試檔案) ✅\n\n## 🔗 技術參考\n- [Python 演算法邏輯](.ai-dev/core-tools/anomaly_detection.py:230)\n- [PHP 效能優化](https://www.php.net/manual/en/features.gc.php)\n- [地理空間計算](https://en.wikipedia.org/wiki/Haversine_formula)\n\n## ⏰ 預計時間\n1-2 小時\n\n## 🏷️ 標籤\n`integration`, `algorithm-porting`, `php`, `python`, `clustering`",
  "teamId": "40b1bdfd-2caa-4306-9fc4-8c4f2d646cec"
}
